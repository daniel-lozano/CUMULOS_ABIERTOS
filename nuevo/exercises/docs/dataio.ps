%!PS-Adobe-1.0
%%Creator: pegasus:jbarnes (Jeannette Barnes)
%%Title: dataio
%%CreationDate: Sat Sep 18 14:53:00 1993
%%DocumentFonts: Courier-Bold Courier Times-Roman Times-Bold Helvetica-Bold
% Start of enscript.pro -- prolog for text file translator
% Copyright (c) 1984,1985,1987 Adobe Systems Incorporated. All Rights Reserved. 
% GOVERNMENT END USERS: See Notice file in TranScript library directory
% -- probably /usr/lib/ps/Notice
% RCSID: $Header: enscript.pro,v 2.2 87/11/17 16:39:56 byron Rel $
save/EnscriptJob exch def
/StartEnscriptDoc{$enscript begin}def
/$enscript 50 dict def $enscript begin
/EndEnscriptDoc{end}def
/S/show load def
/X{exch 0 rmoveto S}def
/Y{exch 0 exch rmoveto S}def
/B{3 1 roll moveto S}def
/F{$fd exch get setfont}def
/StartPage{/svpg save def .05 dup scale}def
/EndPage{svpg restore showpage}def
/DoPreFeed{/statusdict where{pop
 statusdict/prefeed known{statusdict exch/prefeed exch put 0}if}if pop}def
/Landscape{90 rotate 0 -15840 translate}def
/SetUpFonts
 {dup/$fd exch array def{findfont exch scalefont $fd 3 1 roll put}repeat}def
/InitGaudy{/TwoColumn exch def /BarLength exch def
 /ftD /Times-Bold findfont 12 UP scalefont def
 /ftF /Times-Roman findfont 14 UP scalefont def
 /ftP /Helvetica-Bold findfont 30 UP scalefont def}def
/U{1440 mul}def
/UP{U 72 div}def
/LB{/pts exch UP def /charcolor exch def /boxcolor exch def /font exch def
 /label exch def /dy exch def /dx exch def /lly exch def /llx exch def
 gsave boxcolor setgray
 llx lly moveto dx 0 rlineto 0 dy rlineto dx neg 0 rlineto closepath fill
 /lines label length def
 /yp lly dy add dy lines pts mul sub 2 div sub pts .85 mul sub def
 font setfont charcolor setgray
 label {dup stringwidth pop 2 div llx dx 2 div add exch sub yp moveto show
   /yp yp pts sub def}forall grestore}def
/Gaudy{/Page exch def /Date exch def /File exch def /Comment exch def
 .25 U 10.2 U BarLength .1 sub U .25 U [File] ftF .97 0 14 LB
 .25 U 10.45 U BarLength .1 sub U .25 U [Comment] ftF 1 0 14 LB
 .25 U 10.2 U 1 U .5 U Date ftD .7 0 12 LB
 BarLength .75 sub U 10.2 U 1 U .5 U [Page] ftP .7 1 30 LB
 TwoColumn{BarLength 2 div .19 add U 10.2 U moveto 0 -10 U rlineto stroke}if
}def
end
StartEnscriptDoc % end fixed prolog
1 200 /Courier-Bold
0 140 /Courier
2 SetUpFonts
10.55 true InitGaudy
%%EndProlog
%%Page: ? 1
StartPage
Landscape
()(dataio)[(93/09/18)(11:55:03)](1)Gaudy
0 F
2544 14310(IRAF TUTORIAL SESSIONS)B
3048 13990(Exercise 6.)B
360 13510(In this exercise we will acquaint you with some IRAF tools for reading)B
360 13350(and writing data to tape and disk.  We will assume that you are logged into)B
360 13190(IRAF in an xterm window, or a similar graphics terminal emulator window.)B
360 12870(Go to your IRAF home directory and then go to the subdirectory called dataio)B
360 12710(in the exercises directory.)B
1200 12390(cl> cd)B
1200 12230(cl> cd exercises/dataio)B
360 11910(As in the previous exercises, some images exist in this directory as FITS )B
360 11750(files, the standard format for the transporting of astronomical image data.)B
360 11590(The IRAF image format is host dependent and not a good format for data)B
360 11430(exchange.  Thus the usual way to import/export data to/from IRAF is through)B
360 11270(the FITS format.  Two tasks in the DATAIO package are used for this purpose,)B
360 11110(RFITS and WFITS.  Let's convert our FITS files to the IRAF image format.)B
360 10950(The "old+" parameter restores the IRAF image name to the previous name that)B
360 10790(it had on disk if the FITS image was written with WFITS in IRAF.  Otherwise)B
360 10630(the specified output image name is used.)B
1200 10310(cl> dir)B
1200 10150(cl> unlearn dataio        # unlearn all tasks in DATAIO package)B
1200 9990(cl> lpar rfits)B
1200 9830(cl> rfits fits* "" junk old+)B
1200 9670(cl> imhead *.imh)B
360 9350(Both RFITS and WFITS support the reading and writing of data to disk or tape,)B
360 9190(as shown in the previous RFITS example.  Let's use WFITS to write an IRAF)B
360 9030(image to a FITS image on disk, and then look at the FITS header with RFITS.)B
1200 8710(cl> lpar wfits)B
1200 8550(cl> wfits sp0027.ms ftest )B
1200 8390(cl> rfits ftest "" make- long+ | page)B
360 8070(Both of these tasks are quite clever.  RFITS creates an IRAF image on output)B
360 7910(with a pixel type that is compatible with the way the data was stored in)B
360 7750(the FITS image.  So if the FITS image contains 16-bit unscaled data then)B
360 7590(the default IRAF image will contain 16-bit data \(short\).  If the FITS image )B
360 7430(contains scaled data or IEEE formatted data then the resultant IRAF image)B
360 7270(will be 32-bit floating point \(real\).   WFITS will write 16-bit unscaled data)B
360 7110(to the FITS image if the IRAF image contains 16-bit \(short\) data.  If the)B
360 6950(IRAF image contains 32-bit \(real\) data then WFITS will write IEEE formatted)B
360 6790(data to the FITS file.  These defaults can be overridden, of course, but it)B
360 6630(is rarely necessary or advised to do so.)B
360 6310(Tape drives are generally known to IRAF as mta, mtb, etc.  These names)B
360 6150(are defined in the dev$tapecap file that was configured for your site.  We)B
360 5990(will use mta throughout this exercise to refer to a tape drive - you may)B
360 5830(need to substitute the correct name for the drive you are using.  If your)B
360 5670(tape drive is on another machine and available through IRAF networking then)B
360 5510(you need to address the drive as node!mta, where node is the name of the)B
360 5350(host machine.)B
1200 5030(cl> allocate mta          # now load a scratch tape in the drive)B
1200 4870(cl> rewind mta            # rewinds the tape)B
1200 4710(cl> devstatus mta         # gives status of tape)B
360 4390(Let's write all of the images in the this directory to tape.  We will use)B
7920 14470(the defaults for WFITS.  Note the terminal output during the writing of)B
7920 14310(each image that describes the output format.  The data written with )B
7920 14150("bitpix=16" and no scaling is written as 16-bit integer data on the tape;)B
7920 13990(the data described with "bitpix=-32" is written as IEEE floating point)B
7920 13830(data in the FITS image.  Compare this output to the pixel types noted)B
7920 13670(in the IMHEADER output for these same images.)B
8760 13350(cl> lpar wfits)B
8760 13190(cl> imhead *.imh)B
8760 13030(cl> wfits *.imh mta new+)B
7920 12710(Now write one image to tape forcing the data to be scaled to fit the full)B
7920 12550(dynamic range of 16-bits.  The scaling parameters are written to the FITS)B
7920 12390(header so the data can later be restored to the original values when it is)B
7920 12230(read back in.)B
8760 11910(cl> wfits sp0023 mta new- bitpix=16)B
7920 11590(IRAF keeps track of the tape position internally.  A double EOF is left)B
7920 11430(on the tape at the completion of each tape writing command.  We should now )B
7920 11270(have 6 FITS files on the tape;  we will actually be positioned at file 7 )B
7920 11110(because of the double EOF left by the last WFITS command.)B
8760 10790(cl> devstatus mta)B
7920 10470(We can examine the contents of the tape with the task MTEXAMINE.  The default)B
7920 10310(parameters will dump out the record structure for each file on the tape. In)B
7920 10150(our second execution we will dump the 1st record of the 4th file out in ASCII)B
7920 9990(format \(quit the paging with a "q" once you have seen the header information\).)B
7920 9830(After this task execution the tape is now positioned at file 5.)B
8760 9510(cl> lpar mtexamine)B
8760 9350(cl> mtex mta)B
8760 9190(cl> mtex mta file=4 du+ rec=1 out=c | page)B
8760 9030(cl> devstatus mta)B
7920 8710(We can list the data on the FITS tape using the RFITS command.)B
8760 8390(cl> rfits mta 1-99 make-)B
8760 8230(cl> rfits mta 1-99 make- old+)B
7920 7910(We can also look at the FITS headers of files on the tape.  Let's look at)B
7920 7750(the FITS header for the last image we wrote to tape.  Note the BSCALE and)B
7920 7590(BZERO keywords.)B
8760 7270(cl> rfits mta 6 make- long+ | page)B
7920 6950(We can certainly read all of the data back onto disk, or we can select)B
7920 6790(particular files.)B
8760 6470(cl> rfits mta 2,5-6 x)B
8760 6310(cl> dir *.imh)B
8760 6150(cl> imstat x0002,sp0023   # as a check)B
7920 5830(FITS files can be read directly onto disk with the task T2D.)B
8760 5510(cl> lpar t2d)B
8760 5350(cl> t2d mta t 1-2)B
8760 5190(cl> dir)B
8760 5030(cl> rfits t00? "" make-)B
7920 4710(Sometimes you may want to convert an IRAF image file into a ASCII file.  This)B
7920 4550(can be done with the task WTEXTIMAGE.  The task RTEXTIMAGE will convert an)B
7920 4390(ASCII file into an IRAF image file.  Text files can be written to tape with)B
EndPage
%%Page: ? 2
StartPage
Landscape
()(dataio)[(93/09/18)(11:55:03)](2)Gaudy
0 F
360 14470(the task WCARDIMAGE.)B
1200 14150(cl> lpar wtextimage)B
1200 13990(cl> wtextimage sp0027.ms sp.txt )B
1200 13830(cl> page sp.txt)B
1200 13670(cl> lpar rtextimage)B
1200 13510(cl> rtextimage sp.txt sp dim=41,1022)B
1200 13350(cl> imhead sp,sp0027.ms)B
1200 13190(cl> imstat sp,sp0027.ms)B
1200 13030(cl> wcardimage sp.txt mta new- det-)B
1200 12870(cl> devstatus mta)B
360 12550([I normally do not advocate mixing data formats on a tape, but in this case)B
360 12390(I did not want to overwrite the FITS files just in case you wanted to play a)B
360 12230(bit more with the data.])B
360 11910(A complete listing of the tasks in the DATAIO package can be looked at)B
360 11750(with the help facility.  One task that we did not work with was REBLOCK.  )B
360 11590(One little advertised use of REBLOCK is for copying tapes.)B
1200 11270(cl> help dataio)B
360 10950(Once you have finished working with this tape then deallocate the drive)B
360 10790(so others may use it.)B
1200 10470(cl> deallocate mta)B
360 10150(One CAUTION to users:  Since IRAF has its own mechanism for keeping track)B
360 9990(of the tape position, it is advised to always REWIND the tape from within IRAF)B
360 9830(before removing a tape and inserting a new one.  This can be done equally)B
360 9670(as well with DEALLOCATE/ALLOCATE since DEALLOCATE also rewinds the tape.)B
360 9350(We have created some rather large files on disk during this exercise so be)B
360 9190(sure to clean up your directory with DELETE and IMDELETE after you are)B
360 9030(finished.)B
360 8550(--------------------------------------------------------------------------------)B
3048 8230(References)B
360 7910(A Beginner's Guide to Using IRAF, by Jeannette Barnes, August 1993.)B
360 7590(FITS: A Flexible Image Transport System, Wells, D.C., Greisen, E.W., and )B
360 7430(Harten, R.H., 1981, Astronomy and Astrophysics Supplement Series 44, 363)B
360 7110(IEEE Standard for Binary Floating-Point Arithmetic, IEEE Standards Board,)B
360 6950(American National Standards Institute, ANSI/IEEE Std 754-1985)B
360 6630(-------------------------------end of exercise---------------------------------)B
EndPage
%%Trailer
EndEnscriptDoc
EnscriptJob restore
